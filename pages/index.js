import React, { useState, useEffect } from "react"
import Head from "next/head"
import Image from "next/image"
import styles from "./home.module.css"
import cx from "classnames"

import { BsCircle, BsCircleFill } from "react-icons/bs"

export default function Home() {
  const impressions = [
    {
      id: 1,
      img: "/assets/images/avatarHuman.png",
      name: "JOHN DOE",
      event: "Attended X event",
      review:
        "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no.",
    },
    {
      id: 2,
      img: "/assets/images/avatarHuman.png",
      name: "JOHN DOE",
      event: "Attended Y event",
      review:
        "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no.",
    },
    {
      id: 3,
      img: "/assets/images/avatarHuman.png",
      name: "JOHN DOE",
      event: "Attended Z event",
      review:
        "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no.",
    },
  ]

  const [activeCard, setactiveCard] = useState(0)
  const [translateX, setTranslateX] = useState(0)
  var activeWindowSize = 1080

  const setCard = (index) => {
    let multiplier = activeCard - index
    setactiveCard(() => index)
    const card = document.getElementById("card")
    setTranslateX(() => translateX + multiplier * (card.offsetWidth + 480))
  }

  const handleResize = () => {
    if (window.innerWidth < 650 && window.innerWidth > 520 && activeWindowSize != 650) {
      activeWindowSize = 650
      setactiveCard(0)
      setCard(0)
    }
    if (window.innerWidth < 520 && activeWindowSize != 520) {
      activeWindowSize = 520
      setactiveCard(0)
      setCard(0)
    }
  }

  useEffect(() => {
    window.addEventListener("resize", handleResize)
    return () => window.removeEventListener("resize", handleResize)
  })

  return (
    <div>
      <Head>
        <title>Noor</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className={styles.home_wrapper}>
        <main>
          <section>
            <div className={styles.heading}>
              <div style={{ textAlign: "center", alignItems: "center" }}>What is Noor?</div>
            </div>
            <div className={styles._noor_bg_container}></div>
          </section>
          <section className={styles.transformation}>
            <div className={styles.heading}>
              <div style={{ textAlign: "center", alignItems: "center" }}>Here's what's new</div>
            </div>
            <div className={styles.whats_new_bg_container}>
              <section className={styles.impressions}>
                <div className={styles.cards_container}>
                  {impressions.map((impression) => (
                    <div className={styles.card} key={impression.id} id="card" style={{ transform: `translateX(${translateX}px)` }}>
                      <div className={styles.person}>
                        <div className={styles.avatar}>
                          <img src={impression.img} alt={impression.img} />
                        </div>
                        <div className={styles.nameAndEvent}>
                          <h1>{impression.name}</h1>
                          <p>{impression.event}</p>
                        </div>
                      </div>
                      <div className={styles.review}>{impression.review}</div>
                    </div>
                  ))}
                </div>
                <div className={styles.active_buttons}>
                  {impressions.map((count, index) => {
                    return index === activeCard ? (
                      <div style={{ marginRight: index !== impressions.length ? "1.2rem" : "0px", color: "#707070", cursor: "pointer" }}>
                        <BsCircleFill
                          onClick={() => {
                            setCard(index)
                          }}
                        />
                      </div>
                    ) : (
                      <div style={{ marginRight: index !== impressions.length ? "1.2rem" : "0px", color: "#ffffff", cursor: "pointer" }}>
                        <BsCircleFill
                          onClick={() => {
                            setCard(index)
                          }}
                        />
                      </div>
                    )
                  })}
                </div>
              </section>
            </div>
          </section>
        </main>
      </section>
    </div>
  )
}
